---
title: Guide to the Explanation template
tags:
  - templates
  - explanation
---

An explanation document serves as a comprehensive guide, offering clear, concise, and consistent information on a specific subject.
It acts as a roadmap, logically organizing information to enhance comprehension and readability.
By providing essential background information, it enables readers to align their existing knowledge with the tasks they need to perform and gain valuable insights into products, processes, or systems.

For instance, an explanation document called "Object-oriented programming" would offer a structured explanation of the core principles of OOP, helping team members gain a deeper understanding of this programming paradigm and serving as a bridge towards implementing OOP effectively in software development projects and facilitating the application of these principles in practice.

Explanation documents can be thought of as extended definitions of major abstractions, such as a mechanism or a function.
They help explain the context and components of a product or service and how these elements fit into a broader framework.

## Why do I need an explanation document?

* **Alignment and collaboration**:
An explanation document serves as a point of reference for businesses and teams, ensuring all parties have a shared understanding of a subject.
By recording ideas on a given subject in a document, it becomes much easier to communicate them and reduces repeated explanations.
* **Reader comprehension**:
Explanation documents are important because they provide foundational knowledge and background that gives readers context that will help in understanding more specific content.

  Readers can see the connections and relationships between different elements, helping them make informed decisions.
  Decision-making is much easier to do when one understands the broader context.
  An explanation presents information at the appropriate level of detail to help readers:

  * Proceed to other types of content, such as tutorials and references, with the foundational knowledge and context necessary to get the most out of them.
  * Make informed decisions and prioritize efforts.
  * Can see the connections and relationships between different elements and how they fit into a bigger picture.

## Where is its place in the system?

Explanations act as a bridge between subjects in the abstract and the detailed instructions or procedures written about them, allowing readers to understand the core of what is going on before they move on to more complex operations.
They also act as a primer for readers who are not yet ready to dive into concrete operations or step-by-step guides.
By presenting the core concepts and principles in a clear and structured manner, an explanation gradually develops the reader's understanding.

## Template contents

### (Optional) An introductory paragraph

Optionally, you may begin the document with an introductory paragraph before diving into the definition.
This introductory paragraph can set the stage, explaining the subject's relevance and importance.
It provides readers with a context for what they're about to learn and what they can expect in the document.

### Giving a definition

Define the subject so that you and your reader will have a shared understanding of the language used throughout the document.
This is a good moment to set the scope of your explanation - what you will and will not cover.

Provide an overview explaining how the subject interacts with other concepts already known to your readers; if needed, you can also break it down into smaller, more digestible pieces.
By doing so, you help your readers make connections and recognize patterns they may otherwise have missed.

### (Optional) A visual aid or a diagram

Use a diagram to illustrate how the subject is organized or how it fits into a broader system; a decision tree, a flow chart, or a system overview diagram is best suited for these tasks.
Presenting the diagram early helps draw the reader in, and helps them orient themselves visually.

Diagrams are most valuable when they simplify complex relationships, depict processes, or illustrate hierarchies.
Be cautious not to overwhelm the document with unnecessary visuals if the subject is easily explained through text alone.

### (Optional) About the "Background" section

The background section may describe history that is important for better understanding.
You can provide relevant information that helps readers understand the following contexts:

* Historical background (where the idea originated from; are there legacy reasons for its design).
* Industry context (any significant changes in your sector that exerted influence).
* Market performace, new disruptive technologies, business trends, industry regulations et cetera.

It can describe how or why something was designed or developed, what decisions were made in the past, and discuss alternatives.

### (Optional) About the "Use cases" section

A useful approach to this section, if you wish to avoid just writing a list, involves creating a story framed in terms of a protagonist (that is, the reader) who has a problem and a guide who helps them solve it.

For example, the explanation is on the subject of containerisation, and your protagonist is a system administrator in a large company.
He is experiencing slow deployments, inconsistent builds, difficulty scaling up services, et cetera.
Your guide introduces the protagonist to containerised applications and how various aspects of these solve the protagonist's problems.

If you take this approach, always consider how it enhances understanding to avoid overwhelming your readers with unnecessary details.

### (Optional) About the "Comparison" section

If the subject has multiple implementations, versions, types; predecessors, successors and/or competitors, it may be helpful to provide comparisons.
This is often best done with a table.

### (Optional) About the "Additional information" section

Provide links or references to additional resources that can help readers explore the topic further or dive deeper into specific aspects.
If you have many, split them into groups of not more than 3-5 links each, to avoid overwhelming a reader.

---

### High-quality examples

* [Google Document AI overview](https://cloud.google.com/document-ai/docs/overview)
(Accessed 2023-09-10):
This overview serves as a guide to the fundamental concepts of using Document AI.
It also contains a short explanatory video on the subject.

* [Introduction to the DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction) (Accessed 2023-09-10):
This overview of the Document Object Model by Mozilla gives the definition of the DOM and all the linked concepts (like fundamental data types, interfaces), describes how it is
built, and gives a few examples of how it can be used.
It stands out for its comprehensive coverage and user-friendly approach.
The inclusion of practical examples makes it an effective resource for grasping the fundamentals of the DOM.

* [Introduction to infrastructure monitoring](https://docs.splunk.com/Observability/infrastructure/intro-to-infrastructure.html#nav-Introduction) (Accessed 2023-09-10):
This explanation document effectively introduces Splunk Infrastructure Monitoring by providing a clear overview of its purpose and capabilities.
It also presents a well-structured hierarchy of its components and offers concise, actionable information on how users can get started and leverage its features, making it a comprehensive and informative reference for users seeking to understand and utilize Splunk Infrastructure Monitoring.

* [Inside Ubuntu Core](https://ubuntu.com/core/docs/uc20/inside) (Accessed 2023-09-10):
This explanation document provides a detailed explanation of the architecture and components of Ubuntu Core, including Ubuntu Core 22 (UC22) and Ubuntu Core 20 (UC20), highlighting how they are built upon Ubuntu LTS releases and the role of snaps in managing system elements.
It effectively uses a component scheme to visually represent the relationships between various components, making it an excellent resource for understanding the inner workings of Ubuntu Core for embedded devices and its use of snap packages for system management.
In Ubuntu documentation it is specifically included into the Explanations section.
